/**
 * generated by Xtext 2.9.1
 */
package org.xtext.example.mapping.mapping;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.mapping.mapping.MappingFactory
 * @model kind="package"
 * @generated
 */
public interface MappingPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "mapping";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/example/mapping/Mapping";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "mapping";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MappingPackage eINSTANCE = org.xtext.example.mapping.mapping.impl.MappingPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.mapping.mapping.impl.MappingImpl <em>Mapping</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mapping.mapping.impl.MappingImpl
   * @see org.xtext.example.mapping.mapping.impl.MappingPackageImpl#getMapping()
   * @generated
   */
  int MAPPING = 0;

  /**
   * The feature id for the '<em><b>Definitions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING__DEFINITIONS = 0;

  /**
   * The number of structural features of the '<em>Mapping</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mapping.mapping.impl.DefinitionImpl <em>Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mapping.mapping.impl.DefinitionImpl
   * @see org.xtext.example.mapping.mapping.impl.MappingPackageImpl#getDefinition()
   * @generated
   */
  int DEFINITION = 1;

  /**
   * The feature id for the '<em><b>Formal Element</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__FORMAL_ELEMENT = 0;

  /**
   * The feature id for the '<em><b>Uml Element</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__UML_ELEMENT = 1;

  /**
   * The feature id for the '<em><b>Type Element</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION__TYPE_ELEMENT = 2;

  /**
   * The number of structural features of the '<em>Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINITION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mapping.mapping.impl.FormalElementImpl <em>Formal Element</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mapping.mapping.impl.FormalElementImpl
   * @see org.xtext.example.mapping.mapping.impl.MappingPackageImpl#getFormalElement()
   * @generated
   */
  int FORMAL_ELEMENT = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_ELEMENT__NAME = 0;

  /**
   * The number of structural features of the '<em>Formal Element</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_ELEMENT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mapping.mapping.impl.UmlElementImpl <em>Uml Element</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mapping.mapping.impl.UmlElementImpl
   * @see org.xtext.example.mapping.mapping.impl.MappingPackageImpl#getUmlElement()
   * @generated
   */
  int UML_ELEMENT = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UML_ELEMENT__NAME = 0;

  /**
   * The number of structural features of the '<em>Uml Element</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UML_ELEMENT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mapping.mapping.impl.TypeElementImpl <em>Type Element</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mapping.mapping.impl.TypeElementImpl
   * @see org.xtext.example.mapping.mapping.impl.MappingPackageImpl#getTypeElement()
   * @generated
   */
  int TYPE_ELEMENT = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_ELEMENT__NAME = 0;

  /**
   * The number of structural features of the '<em>Type Element</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_ELEMENT_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link org.xtext.example.mapping.mapping.Mapping <em>Mapping</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mapping</em>'.
   * @see org.xtext.example.mapping.mapping.Mapping
   * @generated
   */
  EClass getMapping();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mapping.mapping.Mapping#getDefinitions <em>Definitions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Definitions</em>'.
   * @see org.xtext.example.mapping.mapping.Mapping#getDefinitions()
   * @see #getMapping()
   * @generated
   */
  EReference getMapping_Definitions();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mapping.mapping.Definition <em>Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Definition</em>'.
   * @see org.xtext.example.mapping.mapping.Definition
   * @generated
   */
  EClass getDefinition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mapping.mapping.Definition#getFormalElement <em>Formal Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Formal Element</em>'.
   * @see org.xtext.example.mapping.mapping.Definition#getFormalElement()
   * @see #getDefinition()
   * @generated
   */
  EReference getDefinition_FormalElement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mapping.mapping.Definition#getUmlElement <em>Uml Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Uml Element</em>'.
   * @see org.xtext.example.mapping.mapping.Definition#getUmlElement()
   * @see #getDefinition()
   * @generated
   */
  EReference getDefinition_UmlElement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mapping.mapping.Definition#getTypeElement <em>Type Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Element</em>'.
   * @see org.xtext.example.mapping.mapping.Definition#getTypeElement()
   * @see #getDefinition()
   * @generated
   */
  EReference getDefinition_TypeElement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mapping.mapping.FormalElement <em>Formal Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Formal Element</em>'.
   * @see org.xtext.example.mapping.mapping.FormalElement
   * @generated
   */
  EClass getFormalElement();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mapping.mapping.FormalElement#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.mapping.mapping.FormalElement#getName()
   * @see #getFormalElement()
   * @generated
   */
  EAttribute getFormalElement_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mapping.mapping.UmlElement <em>Uml Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Uml Element</em>'.
   * @see org.xtext.example.mapping.mapping.UmlElement
   * @generated
   */
  EClass getUmlElement();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mapping.mapping.UmlElement#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.mapping.mapping.UmlElement#getName()
   * @see #getUmlElement()
   * @generated
   */
  EAttribute getUmlElement_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mapping.mapping.TypeElement <em>Type Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type Element</em>'.
   * @see org.xtext.example.mapping.mapping.TypeElement
   * @generated
   */
  EClass getTypeElement();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mapping.mapping.TypeElement#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.mapping.mapping.TypeElement#getName()
   * @see #getTypeElement()
   * @generated
   */
  EAttribute getTypeElement_Name();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  MappingFactory getMappingFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.mapping.mapping.impl.MappingImpl <em>Mapping</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mapping.mapping.impl.MappingImpl
     * @see org.xtext.example.mapping.mapping.impl.MappingPackageImpl#getMapping()
     * @generated
     */
    EClass MAPPING = eINSTANCE.getMapping();

    /**
     * The meta object literal for the '<em><b>Definitions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAPPING__DEFINITIONS = eINSTANCE.getMapping_Definitions();

    /**
     * The meta object literal for the '{@link org.xtext.example.mapping.mapping.impl.DefinitionImpl <em>Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mapping.mapping.impl.DefinitionImpl
     * @see org.xtext.example.mapping.mapping.impl.MappingPackageImpl#getDefinition()
     * @generated
     */
    EClass DEFINITION = eINSTANCE.getDefinition();

    /**
     * The meta object literal for the '<em><b>Formal Element</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEFINITION__FORMAL_ELEMENT = eINSTANCE.getDefinition_FormalElement();

    /**
     * The meta object literal for the '<em><b>Uml Element</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEFINITION__UML_ELEMENT = eINSTANCE.getDefinition_UmlElement();

    /**
     * The meta object literal for the '<em><b>Type Element</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEFINITION__TYPE_ELEMENT = eINSTANCE.getDefinition_TypeElement();

    /**
     * The meta object literal for the '{@link org.xtext.example.mapping.mapping.impl.FormalElementImpl <em>Formal Element</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mapping.mapping.impl.FormalElementImpl
     * @see org.xtext.example.mapping.mapping.impl.MappingPackageImpl#getFormalElement()
     * @generated
     */
    EClass FORMAL_ELEMENT = eINSTANCE.getFormalElement();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FORMAL_ELEMENT__NAME = eINSTANCE.getFormalElement_Name();

    /**
     * The meta object literal for the '{@link org.xtext.example.mapping.mapping.impl.UmlElementImpl <em>Uml Element</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mapping.mapping.impl.UmlElementImpl
     * @see org.xtext.example.mapping.mapping.impl.MappingPackageImpl#getUmlElement()
     * @generated
     */
    EClass UML_ELEMENT = eINSTANCE.getUmlElement();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UML_ELEMENT__NAME = eINSTANCE.getUmlElement_Name();

    /**
     * The meta object literal for the '{@link org.xtext.example.mapping.mapping.impl.TypeElementImpl <em>Type Element</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mapping.mapping.impl.TypeElementImpl
     * @see org.xtext.example.mapping.mapping.impl.MappingPackageImpl#getTypeElement()
     * @generated
     */
    EClass TYPE_ELEMENT = eINSTANCE.getTypeElement();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_ELEMENT__NAME = eINSTANCE.getTypeElement_Name();

  }

} //MappingPackage
