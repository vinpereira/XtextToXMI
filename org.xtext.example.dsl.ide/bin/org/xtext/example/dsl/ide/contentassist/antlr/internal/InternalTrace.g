/*
 * generated by Xtext 2.9.1
 */
grammar InternalTrace;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.dsl.services.TraceGrammarAccess;

}
@parser::members {
	private TraceGrammarAccess grammarAccess;

	public void setGrammarAccess(TraceGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleFormalResult
entryRuleFormalResult
:
{ before(grammarAccess.getFormalResultRule()); }
	 ruleFormalResult
{ after(grammarAccess.getFormalResultRule()); } 
	 EOF 
;

// Rule FormalResult
ruleFormalResult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormalResultAccess().getGroup()); }
		(rule__FormalResult__Group__0)
		{ after(grammarAccess.getFormalResultAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeNode
entryRuleTimeNode
:
{ before(grammarAccess.getTimeNodeRule()); }
	 ruleTimeNode
{ after(grammarAccess.getTimeNodeRule()); } 
	 EOF 
;

// Rule TimeNode
ruleTimeNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeNodeAccess().getGroup()); }
		(rule__TimeNode__Group__0)
		{ after(grammarAccess.getTimeNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormalElement
entryRuleFormalElement
:
{ before(grammarAccess.getFormalElementRule()); }
	 ruleFormalElement
{ after(grammarAccess.getFormalElementRule()); } 
	 EOF 
;

// Rule FormalElement
ruleFormalElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormalElementAccess().getGroup()); }
		(rule__FormalElement__Group__0)
		{ after(grammarAccess.getFormalElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getGroup()); }
		(rule__Element__Group__0)
		{ after(grammarAccess.getElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiagram
entryRuleDiagram
:
{ before(grammarAccess.getDiagramRule()); }
	 ruleDiagram
{ after(grammarAccess.getDiagramRule()); } 
	 EOF 
;

// Rule Diagram
ruleDiagram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiagramAccess().getGroup()); }
		(rule__Diagram__Group__0)
		{ after(grammarAccess.getDiagramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getKindAssignment()); }
		(rule__Model__KindAssignment)
		{ after(grammarAccess.getModelAccess().getKindAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DiagramKind
ruleDiagramKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramKindAccess().getAlternatives()); }
		(rule__DiagramKind__Alternatives)
		{ after(grammarAccess.getDiagramKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ModelKind
ruleModelKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelKindAccess().getAlternatives()); }
		(rule__ModelKind__Alternatives)
		{ after(grammarAccess.getModelKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalResultAccess().getGroup_3_0()); }
		(rule__FormalResult__Group_3_0__0)
		{ after(grammarAccess.getFormalResultAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getFormalResultAccess().getGroup_3_1()); }
		(rule__FormalResult__Group_3_1__0)
		{ after(grammarAccess.getFormalResultAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getDiagramAssignment_7_0()); }
		(rule__Element__DiagramAssignment_7_0)
		{ after(grammarAccess.getElementAccess().getDiagramAssignment_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getModelAssignment_7_1()); }
		(rule__Element__ModelAssignment_7_1)
		{ after(grammarAccess.getElementAccess().getModelAssignment_7_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiagramKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramKindAccess().getCLASSDIAGRAMEnumLiteralDeclaration_0()); }
		('ClassDiagram')
		{ after(grammarAccess.getDiagramKindAccess().getCLASSDIAGRAMEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDiagramKindAccess().getSEQUENCEDIAGRAMEnumLiteralDeclaration_1()); }
		('SequenceDiagram')
		{ after(grammarAccess.getDiagramKindAccess().getSEQUENCEDIAGRAMEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDiagramKindAccess().getSTATEDIAGRAMEnumLiteralDeclaration_2()); }
		('StateDiagram')
		{ after(grammarAccess.getDiagramKindAccess().getSTATEDIAGRAMEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDiagramKindAccess().getOBJECTDIAGRAMEnumLiteralDeclaration_3()); }
		('ObjectDiagram')
		{ after(grammarAccess.getDiagramKindAccess().getOBJECTDIAGRAMEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getDiagramKindAccess().getINTERACTIONOVERVIEWDIAGRAMEnumLiteralDeclaration_4()); }
		('InteractionOverviewDiagram')
		{ after(grammarAccess.getDiagramKindAccess().getINTERACTIONOVERVIEWDIAGRAMEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelKindAccess().getUMLEnumLiteralDeclaration_0()); }
		('UMLModel')
		{ after(grammarAccess.getModelKindAccess().getUMLEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelKindAccess().getSysMLEnumLiteralDeclaration_1()); }
		('SysMLModel')
		{ after(grammarAccess.getModelKindAccess().getSysMLEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelKindAccess().getBPMNEnumLiteralDeclaration_2()); }
		('BMPNModel')
		{ after(grammarAccess.getModelKindAccess().getBPMNEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalResult__Group__0__Impl
	rule__FormalResult__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalResultAccess().getFormalResultsKeyword_0()); }
	'FormalResults'
	{ after(grammarAccess.getFormalResultAccess().getFormalResultsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalResult__Group__1__Impl
	rule__FormalResult__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalResultAccess().getNameAssignment_1()); }
	(rule__FormalResult__NameAssignment_1)
	{ after(grammarAccess.getFormalResultAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalResult__Group__2__Impl
	rule__FormalResult__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalResultAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getFormalResultAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalResult__Group__3__Impl
	rule__FormalResult__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalResultAccess().getAlternatives_3()); }
	(rule__FormalResult__Alternatives_3)
	{ after(grammarAccess.getFormalResultAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalResult__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalResultAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getFormalResultAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormalResult__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalResult__Group_3_0__0__Impl
	rule__FormalResult__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalResultAccess().getTimenodesAssignment_3_0_0()); }
	(rule__FormalResult__TimenodesAssignment_3_0_0)
	{ after(grammarAccess.getFormalResultAccess().getTimenodesAssignment_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalResult__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalResultAccess().getGroup_3_0_1()); }
	(rule__FormalResult__Group_3_0_1__0)*
	{ after(grammarAccess.getFormalResultAccess().getGroup_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormalResult__Group_3_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalResult__Group_3_0_1__0__Impl
	rule__FormalResult__Group_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group_3_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalResultAccess().getCommaKeyword_3_0_1_0()); }
	','
	{ after(grammarAccess.getFormalResultAccess().getCommaKeyword_3_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group_3_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalResult__Group_3_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group_3_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalResultAccess().getTimenodesAssignment_3_0_1_1()); }
	(rule__FormalResult__TimenodesAssignment_3_0_1_1)
	{ after(grammarAccess.getFormalResultAccess().getTimenodesAssignment_3_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormalResult__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalResult__Group_3_1__0__Impl
	rule__FormalResult__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalResultAccess().getFormalElementsAssignment_3_1_0()); }
	(rule__FormalResult__FormalElementsAssignment_3_1_0)
	{ after(grammarAccess.getFormalResultAccess().getFormalElementsAssignment_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalResult__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalResultAccess().getGroup_3_1_1()); }
	(rule__FormalResult__Group_3_1_1__0)*
	{ after(grammarAccess.getFormalResultAccess().getGroup_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormalResult__Group_3_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalResult__Group_3_1_1__0__Impl
	rule__FormalResult__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group_3_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalResultAccess().getCommaKeyword_3_1_1_0()); }
	','
	{ after(grammarAccess.getFormalResultAccess().getCommaKeyword_3_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group_3_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalResult__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__Group_3_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalResultAccess().getFormalElementsAssignment_3_1_1_1()); }
	(rule__FormalResult__FormalElementsAssignment_3_1_1_1)
	{ after(grammarAccess.getFormalResultAccess().getFormalElementsAssignment_3_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeNode__Group__0__Impl
	rule__TimeNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeNodeAccess().getTimeNodeKeyword_0()); }
	'TimeNode'
	{ after(grammarAccess.getTimeNodeAccess().getTimeNodeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeNode__Group__1__Impl
	rule__TimeNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeNodeAccess().getNameAssignment_1()); }
	(rule__TimeNode__NameAssignment_1)
	{ after(grammarAccess.getTimeNodeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeNode__Group__2__Impl
	rule__TimeNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeNodeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTimeNodeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeNode__Group__3__Impl
	rule__TimeNode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeNodeAccess().getFormalelementAssignment_3()); }
	(rule__TimeNode__FormalelementAssignment_3)
	{ after(grammarAccess.getTimeNodeAccess().getFormalelementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeNode__Group__4__Impl
	rule__TimeNode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeNodeAccess().getGroup_4()); }
	(rule__TimeNode__Group_4__0)*
	{ after(grammarAccess.getTimeNodeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeNode__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeNodeAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getTimeNodeAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeNode__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeNode__Group_4__0__Impl
	rule__TimeNode__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeNodeAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getTimeNodeAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeNode__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeNodeAccess().getFormalelementAssignment_4_1()); }
	(rule__TimeNode__FormalelementAssignment_4_1)
	{ after(grammarAccess.getTimeNodeAccess().getFormalelementAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormalElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalElement__Group__0__Impl
	rule__FormalElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalElementAccess().getFormalElementKeyword_0()); }
	'FormalElement'
	{ after(grammarAccess.getFormalElementAccess().getFormalElementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalElement__Group__1__Impl
	rule__FormalElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalElementAccess().getFormalElementAssignment_1()); }
	(rule__FormalElement__FormalElementAssignment_1)
	{ after(grammarAccess.getFormalElementAccess().getFormalElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalElement__Group__2__Impl
	rule__FormalElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalElementAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getFormalElementAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalElement__Group__3__Impl
	rule__FormalElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalElementAccess().getElementAssignment_3()); }
	(rule__FormalElement__ElementAssignment_3)
	{ after(grammarAccess.getFormalElementAccess().getElementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalElement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalElement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalElement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalElementAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getFormalElementAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__0__Impl
	rule__Element__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getRefersToKeyword_0()); }
	'Refers to'
	{ after(grammarAccess.getElementAccess().getRefersToKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__1__Impl
	rule__Element__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getTypeElementAssignment_1()); }
	(rule__Element__TypeElementAssignment_1)
	{ after(grammarAccess.getElementAccess().getTypeElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__2__Impl
	rule__Element__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getElementKeyword_2()); }
	'element'
	{ after(grammarAccess.getElementAccess().getElementKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__3__Impl
	rule__Element__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getElementAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__4__Impl
	rule__Element__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getWithIDKeyword_4()); }
	'With ID'
	{ after(grammarAccess.getElementAccess().getWithIDKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__5__Impl
	rule__Element__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getUmlElementAssignment_5()); }
	(rule__Element__UmlElementAssignment_5)
	{ after(grammarAccess.getElementAccess().getUmlElementAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__6__Impl
	rule__Element__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getBelongsToKeyword_6()); }
	'Belongs to'
	{ after(grammarAccess.getElementAccess().getBelongsToKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__7__Impl
	rule__Element__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getAlternatives_7()); }
	(rule__Element__Alternatives_7)
	{ after(grammarAccess.getElementAccess().getAlternatives_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getElementAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group__0__Impl
	rule__Diagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getKindAssignment_0()); }
	(rule__Diagram__KindAssignment_0)
	{ after(grammarAccess.getDiagramAccess().getKindAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group__1__Impl
	rule__Diagram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getFromKeyword_1()); }
	'from'
	{ after(grammarAccess.getDiagramAccess().getFromKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Diagram__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiagramAccess().getModelAssignment_2()); }
	(rule__Diagram__ModelAssignment_2)
	{ after(grammarAccess.getDiagramAccess().getModelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormalResult__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalResultAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFormalResultAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__TimenodesAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalResultAccess().getTimenodesTimeNodeParserRuleCall_3_0_0_0()); }
		ruleTimeNode
		{ after(grammarAccess.getFormalResultAccess().getTimenodesTimeNodeParserRuleCall_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__TimenodesAssignment_3_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalResultAccess().getTimenodesTimeNodeParserRuleCall_3_0_1_1_0()); }
		ruleTimeNode
		{ after(grammarAccess.getFormalResultAccess().getTimenodesTimeNodeParserRuleCall_3_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__FormalElementsAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalResultAccess().getFormalElementsFormalElementParserRuleCall_3_1_0_0()); }
		ruleFormalElement
		{ after(grammarAccess.getFormalResultAccess().getFormalElementsFormalElementParserRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalResult__FormalElementsAssignment_3_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalResultAccess().getFormalElementsFormalElementParserRuleCall_3_1_1_1_0()); }
		ruleFormalElement
		{ after(grammarAccess.getFormalResultAccess().getFormalElementsFormalElementParserRuleCall_3_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeNodeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTimeNodeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__FormalelementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeNodeAccess().getFormalelementFormalElementParserRuleCall_3_0()); }
		ruleFormalElement
		{ after(grammarAccess.getTimeNodeAccess().getFormalelementFormalElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeNode__FormalelementAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeNodeAccess().getFormalelementFormalElementParserRuleCall_4_1_0()); }
		ruleFormalElement
		{ after(grammarAccess.getTimeNodeAccess().getFormalelementFormalElementParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalElement__FormalElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalElementAccess().getFormalElementFormalElementCrossReference_1_0()); }
		(
			{ before(grammarAccess.getFormalElementAccess().getFormalElementFormalElementIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFormalElementAccess().getFormalElementFormalElementIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getFormalElementAccess().getFormalElementFormalElementCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalElement__ElementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalElementAccess().getElementElementParserRuleCall_3_0()); }
		ruleElement
		{ after(grammarAccess.getFormalElementAccess().getElementElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__TypeElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getTypeElementTypeElementCrossReference_1_0()); }
		(
			{ before(grammarAccess.getElementAccess().getTypeElementTypeElementIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getElementAccess().getTypeElementTypeElementIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getElementAccess().getTypeElementTypeElementCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__UmlElementAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getUmlElementUmlElementCrossReference_5_0()); }
		(
			{ before(grammarAccess.getElementAccess().getUmlElementUmlElementIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getElementAccess().getUmlElementUmlElementIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getElementAccess().getUmlElementUmlElementCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__DiagramAssignment_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getDiagramDiagramParserRuleCall_7_0_0()); }
		ruleDiagram
		{ after(grammarAccess.getElementAccess().getDiagramDiagramParserRuleCall_7_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ModelAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getModelModelParserRuleCall_7_1_0()); }
		ruleModel
		{ after(grammarAccess.getElementAccess().getModelModelParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__KindAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramAccess().getKindDiagramKindEnumRuleCall_0_0()); }
		ruleDiagramKind
		{ after(grammarAccess.getDiagramAccess().getKindDiagramKindEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__ModelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiagramAccess().getModelModelParserRuleCall_2_0()); }
		ruleModel
		{ after(grammarAccess.getDiagramAccess().getModelModelParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__KindAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getKindModelKindEnumRuleCall_0()); }
		ruleModelKind
		{ after(grammarAccess.getModelAccess().getKindModelKindEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
